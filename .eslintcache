[{"/Users/jani/Code/Web/dxpaint/src/index.tsx":"1","/Users/jani/Code/Web/dxpaint/src/components/App.tsx":"2","/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx":"3","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx":"4","/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx":"5","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx":"6","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts":"7","/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts":"8","/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts":"9","/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts":"10","/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx":"11","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx":"12","/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx":"13","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts":"14","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts":"15","/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts":"16","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts":"17","/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts":"18","/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts":"19","/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts":"20","/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx":"21","/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx":"22","/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx":"23","/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx":"24","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx":"25","/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx":"26","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts":"27","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx":"28","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx":"29","/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx":"30","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts":"31","/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts":"32","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts":"33","/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts":"34","/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx":"35","/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx":"36","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx":"37","/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx":"38","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx":"39","/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx":"40","/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx":"41","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx":"42","/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx":"43","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx":"44","/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx":"45","/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx":"46","/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx":"47","/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx":"48","/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts":"49","/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts":"50","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts":"51","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx":"52","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx":"53","/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts":"54","/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts":"55","/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx":"56","/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx":"57","/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx":"58","/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx":"59","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts":"60","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts":"61","/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx":"62","/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx":"63","/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts":"64","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts":"65","/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx":"66","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts":"67","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts":"68","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx":"69","/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx":"70","/Users/jani/Code/Web/dxpaint/src/algorithm/primitive.ts":"71","/Users/jani/Code/Web/dxpaint/src/colorIndex/util.ts":"72","/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts":"73","/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx":"74","/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx":"75","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts":"76","/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts":"77","/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts":"78","/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx":"79","/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts":"80","/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx":"81","/Users/jani/Code/Web/dxpaint/src/colorIndex/indexers/DrawImageIndexer.ts":"82","/Users/jani/Code/Web/dxpaint/src/colorIndex/ColorIndexer.ts":"83","/Users/jani/Code/Web/dxpaint/src/colorIndex/indexers/GeometricIndexer.ts":"84","/Users/jani/Code/Web/dxpaint/src/renderer/PaintingCanvasRenderController.ts":"85","/Users/jani/Code/Web/dxpaint/src/renderer/renderers/ColorIndexDrawImageRenderer.ts":"86","/Users/jani/Code/Web/dxpaint/src/renderer/renderers/ColorIndexGeometricRenderer.ts":"87","/Users/jani/Code/Web/dxpaint/src/core/OverlayCanvasController.ts":"88","/Users/jani/Code/Web/dxpaint/src/renderer/renderers/OverlayGeometricRenderer.ts":"89","/Users/jani/Code/Web/dxpaint/src/core/PaintingCanvasController.ts":"90","/Users/jani/Code/Web/dxpaint/src/renderer/OverlayCanvasRenderController.ts":"91"},{"size":758,"mtime":1581006660054,"results":"92","hashOfConfig":"93"},{"size":1647,"mtime":1610123744119,"results":"94","hashOfConfig":"93"},{"size":2303,"mtime":1587397395180,"results":"95","hashOfConfig":"93"},{"size":1650,"mtime":1587397383935,"results":"96","hashOfConfig":"93"},{"size":4292,"mtime":1588883165180,"results":"97","hashOfConfig":"93"},{"size":1341,"mtime":1609964713351,"results":"98","hashOfConfig":"93"},{"size":99,"mtime":1570358386366,"results":"99","hashOfConfig":"93"},{"size":99,"mtime":1589653071467,"results":"100","hashOfConfig":"93"},{"size":99,"mtime":1581162181250,"results":"101","hashOfConfig":"93"},{"size":371,"mtime":1598417463850,"results":"102","hashOfConfig":"93"},{"size":5404,"mtime":1615708990658,"results":"103","hashOfConfig":"93"},{"size":712,"mtime":1586637521430,"results":"104","hashOfConfig":"93"},{"size":6667,"mtime":1613232457299,"results":"105","hashOfConfig":"93"},{"size":103,"mtime":1589645340777,"results":"106","hashOfConfig":"93"},{"size":238,"mtime":1589698799652,"results":"107","hashOfConfig":"93"},{"size":994,"mtime":1610288900130,"results":"108","hashOfConfig":"93"},{"size":2307,"mtime":1587665133808,"results":"109","hashOfConfig":"93"},{"size":3939,"mtime":1606591580738,"results":"110","hashOfConfig":"93"},{"size":775,"mtime":1598628605933,"results":"111","hashOfConfig":"93"},{"size":16177,"mtime":1616087046752,"results":"112","hashOfConfig":"93"},{"size":3763,"mtime":1616095559822,"results":"113","hashOfConfig":"93"},{"size":2427,"mtime":1598195635333,"results":"114","hashOfConfig":"93"},{"size":5449,"mtime":1598418063310,"results":"115","hashOfConfig":"93"},{"size":3269,"mtime":1598417920855,"results":"116","hashOfConfig":"93"},{"size":3137,"mtime":1614154844644,"results":"117","hashOfConfig":"93"},{"size":749,"mtime":1606592951751,"results":"118","hashOfConfig":"93"},{"size":1069,"mtime":1609948473281,"results":"119","hashOfConfig":"93"},{"size":419,"mtime":1586636737515,"results":"120","hashOfConfig":"93"},{"size":1292,"mtime":1615622215367,"results":"121","hashOfConfig":"93"},{"size":448,"mtime":1606592971846,"results":"122","hashOfConfig":"93"},{"size":990,"mtime":1606591610390,"results":"123","hashOfConfig":"93"},{"size":163,"mtime":1610827421065,"results":"124","hashOfConfig":"93"},{"size":787,"mtime":1610395467992,"results":"125","hashOfConfig":"93"},{"size":3492,"mtime":1598088214899,"results":"126","hashOfConfig":"93"},{"size":3524,"mtime":1616087101653,"results":"127","hashOfConfig":"93"},{"size":2981,"mtime":1615722971654,"results":"128","hashOfConfig":"93"},{"size":1686,"mtime":1596966551515,"results":"129","hashOfConfig":"93"},{"size":3062,"mtime":1598418004456,"results":"130","hashOfConfig":"93"},{"size":4424,"mtime":1598418176200,"results":"131","hashOfConfig":"93"},{"size":620,"mtime":1609948514564,"results":"132","hashOfConfig":"93"},{"size":1542,"mtime":1610828201690,"results":"133","hashOfConfig":"93"},{"size":1328,"mtime":1576359001814,"results":"134","hashOfConfig":"93"},{"size":3226,"mtime":1613738313456,"results":"135","hashOfConfig":"93"},{"size":849,"mtime":1582737330219,"results":"136","hashOfConfig":"93"},{"size":1947,"mtime":1613737455235,"results":"137","hashOfConfig":"93"},{"size":794,"mtime":1589698776952,"results":"138","hashOfConfig":"93"},{"size":5255,"mtime":1613737486628,"results":"139","hashOfConfig":"93"},{"size":1298,"mtime":1589699509988,"results":"140","hashOfConfig":"93"},{"size":99,"mtime":1570358390587,"results":"141","hashOfConfig":"93"},{"size":99,"mtime":1570358382606,"results":"142","hashOfConfig":"93"},{"size":99,"mtime":1570358454848,"results":"143","hashOfConfig":"93"},{"size":479,"mtime":1586285629987,"results":"144","hashOfConfig":"93"},{"size":691,"mtime":1582737314794,"results":"145","hashOfConfig":"93"},{"size":197,"mtime":1589653419630,"results":"146","hashOfConfig":"93"},{"size":1538,"mtime":1613232457299,"results":"147","hashOfConfig":"93"},{"size":2633,"mtime":1596966551507,"results":"148","hashOfConfig":"93"},{"size":4663,"mtime":1615896850513,"results":"149","hashOfConfig":"93"},{"size":1161,"mtime":1615480595574,"results":"150","hashOfConfig":"93"},{"size":2017,"mtime":1597691407920,"results":"151","hashOfConfig":"93"},{"size":99,"mtime":1589645298846,"results":"152","hashOfConfig":"93"},{"size":1574,"mtime":1615634483894,"results":"153","hashOfConfig":"93"},{"size":3801,"mtime":1615966689781,"results":"154","hashOfConfig":"93"},{"size":3797,"mtime":1596966551513,"results":"155","hashOfConfig":"93"},{"size":99,"mtime":1570358463891,"results":"156","hashOfConfig":"93"},{"size":3476,"mtime":1606591793814,"results":"157","hashOfConfig":"93"},{"size":2892,"mtime":1598418027518,"results":"158","hashOfConfig":"93"},{"size":221,"mtime":1609964687396,"results":"159","hashOfConfig":"93"},{"size":94,"mtime":1609948309696,"results":"160","hashOfConfig":"93"},{"size":1140,"mtime":1610122119190,"results":"161","hashOfConfig":"93"},{"size":2782,"mtime":1610122387748,"results":"162","hashOfConfig":"93"},{"size":3111,"mtime":1613738274657,"results":"163","hashOfConfig":"93"},{"size":1841,"mtime":1615576399763,"results":"164","hashOfConfig":"93"},{"size":1151,"mtime":1615480595509,"results":"165","hashOfConfig":"93"},{"size":3361,"mtime":1610827576318,"results":"166","hashOfConfig":"93"},{"size":6335,"mtime":1615480595483,"results":"167","hashOfConfig":"93"},{"size":99,"mtime":1609948228471,"results":"168","hashOfConfig":"93"},{"size":129,"mtime":1589653235884,"results":"169","hashOfConfig":"93"},{"size":424,"mtime":1611407191206,"results":"170","hashOfConfig":"93"},{"size":758,"mtime":1616082227415,"results":"171","hashOfConfig":"93"},{"size":5183,"mtime":1615012131754,"results":"172","hashOfConfig":"93"},{"size":4028,"mtime":1584903623805,"results":"173","hashOfConfig":"93"},{"size":6009,"mtime":1613307455776,"results":"174","hashOfConfig":"93"},{"size":7188,"mtime":1615966244137,"results":"175","hashOfConfig":"93"},{"size":6567,"mtime":1615967420911,"results":"176","hashOfConfig":"93"},{"size":3652,"mtime":1616084654334,"results":"177","hashOfConfig":"93"},{"size":3905,"mtime":1615631559945,"results":"178","hashOfConfig":"93"},{"size":6502,"mtime":1616096078641,"results":"179","hashOfConfig":"93"},{"size":2574,"mtime":1616095392547,"results":"180","hashOfConfig":"93"},{"size":4844,"mtime":1615909450457,"results":"181","hashOfConfig":"93"},{"size":3170,"mtime":1616084471332,"results":"182","hashOfConfig":"93"},{"size":1780,"mtime":1616095301317,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"1plr3f1",{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"236","messages":"237","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"186"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"203"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"200"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"193"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"186"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"203"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"200"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"186"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"297"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jani/Code/Web/dxpaint/src/index.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/App.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx",["383","384"],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx",[],"/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts",["385"],"/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx",["386"],"/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx",["387","388"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class AirbrushTool implements Tool {\n  private timeout = 0;\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseMove(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    const mousePos = getMousePos(canvas, event);\n    overmind.actions.tool.airbrushToolPosition(mousePos);\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const { event, ctx, onPaint } = params;\n\n    const draw = (ctx: CanvasRenderingContext2D, onPaint: Function): void => {\n      for (let i = 50; i--; ) {\n        const angle = getRandomFloat(0, Math.PI * 2);\n        const radius = getRandomFloat(0, 20);\n        if (overmind.state.tool.airbrushTool.position) {\n          brushHistory.current.drawDot(ctx, {\n            x: overmind.state.tool.airbrushTool.position.x + radius * Math.cos(angle),\n            y: overmind.state.tool.airbrushTool.position.y + radius * Math.sin(angle),\n          });\n        }\n      }\n      onPaint();\n      this.timeout = setTimeout(draw, 20, ctx, onPaint);\n    };\n\n    this.prepareToPaint(isRightMouseButton(event));\n    this.timeout = setTimeout(draw, 20, ctx, onPaint);\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const { undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    undoPoint();\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    const { event, undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    if (isLeftOrRightMouseButton(event)) {\n      undoPoint();\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    if (event.buttons) {\n      return;\n    }\n    clearOverlayCanvas(canvas);\n\n    const mousePos = getMousePos(canvas, event);\n    brushHistory.current.drawDot(ctx, mousePos);\n    onPaint();\n  }\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n\nfunction getRandomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx",["389"],"export class Throttle {\n  private milliSecs: number;\n  private lastFunc: NodeJS.Timeout | null;\n  private lastRan: number | null;\n\n  public constructor(milliSecs: number) {\n    this.milliSecs = milliSecs;\n    this.lastFunc = null;\n    this.lastRan = null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public call(func: Function): void {\n    if (!this.lastRan) {\n      func();\n      this.lastRan = Date.now();\n    } else {\n      if (this.lastFunc) {\n        clearTimeout(this.lastFunc);\n      }\n      this.lastFunc = setTimeout(() => {\n        if (Date.now() - this.lastRan! >= this.milliSecs) {\n          func();\n          this.lastRan = Date.now();\n        }\n      }, this.milliSecs - (Date.now() - this.lastRan));\n    }\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts",["390"],"export type State = {\n  currentIndex: number | null;\n  lastUndoRedoTime: number;\n};\n\nexport const state: State = {\n  currentIndex: null,\n  lastUndoRedoTime: 0,\n};\n","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx",["391","392","393","394","395","396"],"/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx",["397"],"/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx",["398"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { Throttle } from './util/Throttle';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class CurveTool implements Tool {\n  private throttle = new Throttle(50);\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.curveToolReset();\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      undoPoint,\n      onPaint,\n    } = params;\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      return;\n    }\n\n    const mousePos = getMousePos(canvas, event);\n    const endPoint = overmind.state.tool.curveTool.end;\n\n    if (endPoint) {\n      brushHistory.current.drawCurve(ctx, startPoint, endPoint, mousePos);\n      undoPoint();\n      onPaint();\n      this.onInit(omit(params, 'event'));\n    } else {\n      overmind.actions.tool.curveToolEnd(mousePos);\n    }\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    if (!overmind.state.tool.curveTool.end) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(canvas, event);\n      overmind.actions.tool.curveToolStart(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      clearOverlayCanvas(canvas);\n      brushHistory.current.drawDot(ctx, mousePos);\n      onPaint();\n      return;\n    }\n\n    const endPoint = overmind.state.tool.curveTool.end;\n    if (endPoint) {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawCurve(ctx, startPoint, endPoint, mousePos);\n      });\n    } else if (isLeftOrRightMouseButton(event)) {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawLine(ctx, startPoint, mousePos);\n      });\n    }\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx",["399"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  pointEquals,\n  omit,\n} from './util/util';\nimport { overmind } from '../index';\nimport { Throttle } from './util/Throttle';\nimport { unfilledPolygon } from '../algorithm/shape';\nimport { PixelBrush } from '../brush/PixelBrush';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class PolygonTool implements Tool {\n  private throttle = new Throttle(20);\n  public constructor(filled: boolean) {\n    this.filled = filled;\n  }\n  private filled: boolean;\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.polygonToolReset();\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      undoPoint,\n      onPaint,\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n\n    // first click (left or right) determines polygon fill color\n    if (!overmind.state.tool.polygonTool.vertices.length) {\n      this.prepareToPaint(isRightMouseButton(event));\n      overmind.actions.tool.polygonToolAddVertice(mousePos);\n      return;\n    }\n\n    // complete polygon on right click or if starting point reselected\n    if (\n      isRightMouseButton(event) ||\n      pointEquals(overmind.state.tool.polygonTool.vertices[0], mousePos)\n    ) {\n      if (this.filled) {\n        brushHistory.current.drawFilledPolygon(ctx, overmind.state.tool.polygonTool.vertices);\n      } else {\n        brushHistory.current.drawUnfilledPolygon(ctx, overmind.state.tool.polygonTool.vertices);\n      }\n      undoPoint();\n      onPaint();\n      this.onInit(omit(params, 'event'));\n      return;\n    }\n\n    // otherwise just add new vertice\n    overmind.actions.tool.polygonToolAddVertice(mousePos);\n  }\n\n  // Overlay\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n\n    if (overmind.state.tool.polygonTool.vertices.length > 1) {\n      if (this.filled) {\n        unfilledPolygon(ctx, new PixelBrush(), overmind.state.tool.polygonTool.vertices, false);\n      } else {\n        brushHistory.current.drawUnfilledPolygon(\n          ctx,\n          overmind.state.tool.polygonTool.vertices,\n          false\n        );\n      }\n    }\n    onPaint();\n  }\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n\n    const mousePos = getMousePos(canvas, event);\n\n    if (!overmind.state.tool.polygonTool.vertices.length) {\n      clearOverlayCanvas(canvas);\n      brushHistory.current.drawDot(ctx, mousePos);\n      onPaint();\n      return;\n    }\n\n    if (this.filled) {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        unfilledPolygon(\n          ctx,\n          new PixelBrush(),\n          overmind.state.tool.polygonTool.vertices.slice().concat(mousePos),\n          false\n        );\n      });\n    } else {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawUnfilledPolygon(\n          ctx,\n          overmind.state.tool.polygonTool.vertices.slice().concat(mousePos),\n          false\n        );\n      });\n    }\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n\n    clearOverlayCanvas(canvas);\n\n    if (overmind.state.tool.polygonTool.vertices.length > 0) {\n      if (this.filled) {\n        unfilledPolygon(ctx, new PixelBrush(), overmind.state.tool.polygonTool.vertices, false);\n      } else {\n        brushHistory.current.drawUnfilledPolygon(\n          ctx,\n          overmind.state.tool.polygonTool.vertices,\n          false\n        );\n      }\n      onPaint();\n    }\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx",["400","401"],"import { Point } from '../../types';\nimport { useEffect } from 'react';\nimport { useOvermind } from '../../overmind';\nimport { undoBuffer } from '../../overmind/undo/UndoBuffer';\nimport { blobToCanvas } from './util';\nimport { EventHandlerParams, EventHandlerParamsOverlay } from '../../tools/Tool';\n//import { renderToCanvasFrom } from '../../colorIndex/ColorIndexer';\n\nexport function useInitTool(\n  eventHandlerParams: EventHandlerParams,\n  eventHandlerParamsOverlay: EventHandlerParamsOverlay,\n  isZoomCanvas: boolean\n): void {\n  const { state } = useOvermind();\n  useEffect((): void => {\n    if (!isZoomCanvas) {\n      state.toolbox.previousTool?.onExit?.(eventHandlerParams);\n      state.toolbox.previousTool?.onExitOverlay?.(eventHandlerParamsOverlay);\n    }\n  }, [state.toolbox.previousTool]);\n  useEffect((): void => {\n    if (!isZoomCanvas) {\n      state.toolbox.activeTool.onInit?.(eventHandlerParams);\n      state.toolbox.activeTool.onInitOverlay?.(eventHandlerParamsOverlay);\n    }\n  }, [state.toolbox.activeTool]);\n}\n\n// Update current fillStyle from state to canvas context when:\n// 1. fillStyle has been changed\n// 2. canvas resolution changes, as this also resets context\nexport function useFillStyle(ctx: CanvasRenderingContext2D | null): void {\n  const { state } = useOvermind();\n  useEffect((): void => {\n    if (ctx) {\n      ctx.fillStyle = state.canvas.fillStyle;\n      ctx.strokeStyle = state.canvas.fillStyle;\n    }\n  }, [state.canvas.fillStyle, state.canvas.resolution]);\n}\n\nexport function useUndo(canvas: HTMLCanvasElement): void {\n  const { state } = useOvermind();\n  useEffect((): void => {\n    //blobToCanvas(state.undo.currentBufferItem, canvas);\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      if (state.undo.currentIndex === null) {\n        return;\n      }\n      const colorIndex = undoBuffer.getItem(state.undo.currentIndex);\n      //renderToCanvasFrom(ctx, colorIndex);\n    }\n    console.log('undo hook end');\n  }, [state.undo.lastUndoRedoTime]);\n}\n\n// Load image to canvas when loadedImageURL changes\n// Changes canvas height and width to match image\nexport function useLoadedImage(canvas: HTMLCanvasElement): void {\n  const { state, actions } = useOvermind();\n  useEffect((): void => {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    const image = new Image();\n    image.onload = function (): void {\n      // No need to clear canvas, as changing dimensions clears it anyway.\n      // Note that context is also reset\n      actions.canvas.setResolution({ width: image.width, height: image.height });\n      ctx.drawImage(image, 0, 0);\n      actions.undo.setUndoPoint(canvas);\n      actions.canvas.setCanvasModified(false);\n    };\n    image.src = state.canvas.loadedImageURL;\n  }, [state.canvas.loadedImageURL]);\n}\n\nexport function useScrollToFocusPoint(\n  canvasDiv: HTMLDivElement,\n  focusPoint: Point | null,\n  zoomFactor = 1\n): void {\n  useEffect((): void => {\n    if (focusPoint === null) {\n      return;\n    }\n    const scrollOptions = {\n      left: focusPoint.x * zoomFactor - canvasDiv.clientWidth / 2,\n      top: focusPoint.y * zoomFactor - canvasDiv.clientHeight / 2,\n    };\n    canvasDiv.scrollTo(scrollOptions);\n  }, [focusPoint]);\n}\n","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts",["402","403"],"import { Action } from 'overmind';\nimport { BrushInterface } from '../../brush/Brush';\nimport { Mode, BuiltInBrushId, builtInBrushes } from './state';\nimport { CustomBrush } from '../../brush/CustomBrush';\nimport { brushHistory } from '../../brush/BrushHistory';\n\nexport const setBrush: Action<BrushInterface> = ({ state }, brush): void => {\n  brushHistory.set(brush);\n};\n\nexport const selectBuiltInBrush: Action<BuiltInBrushId> = (\n  { state, actions },\n  brushNumber\n): void => {\n  state.brush.selectedBuiltInBrushId = brushNumber;\n  actions.brush.setBrush(builtInBrushes[brushNumber]);\n  actions.brush.setMode('Color');\n};\n\nexport const setMode: Action<Mode> = ({ state }, mode): void => {\n  state.brush.mode = mode;\n  const brush = brushHistory.current;\n  if (brush instanceof CustomBrush) {\n    if (mode === 'Color') {\n      brush.setFGColor(state.palette.foregroundColor);\n      brush.setBGColor(state.palette.backgroundColor);\n      brush.toFGColor();\n    } else if (mode === 'Matte') {\n      brush.setBGColor(state.palette.backgroundColor);\n      brush.toMatte();\n    }\n  }\n};\n\nexport const toFGBrush: Action = ({ state }): void => {\n  const brush = brushHistory.current;\n  if (state.brush.mode === 'Color' && brush instanceof CustomBrush) {\n    brush.toFGColor();\n  }\n  if (state.brush.mode === 'Matte' && brush instanceof CustomBrush) {\n    brush.toMatte();\n  }\n};\n\nexport const toBGBrush: Action = ({ state }): void => {\n  const brush = brushHistory.current;\n  if (brush instanceof CustomBrush) {\n    brush.toBGColor();\n  }\n};\n","/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx",["404"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport { getMousePos, clearOverlayCanvas, extractBrush } from './util/util';\nimport { overmind } from '../index';\nimport { selection } from './util/SelectionIndicator';\n\nexport class BrushSelector implements Tool {\n  public onInit(params: EventHandlerParams): void {\n    const {\n      ctx: { canvas },\n    } = params;\n    overmind.actions.tool.brushSelectionStart(null);\n    selection.prepare(canvas);\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    const start = overmind.state.tool.brushSelectorTool.start;\n    if (!start) {\n      return;\n    }\n\n    const mousePos = getMousePos(canvas, event);\n    const width = mousePos.x - start.x;\n    const height = mousePos.y - start.y;\n\n    const brush = extractBrush(canvas, start, width, height);\n    overmind.actions.brush.setBrush(brush);\n    overmind.actions.brush.setMode('Matte');\n\n    // exit brush selection tool\n    overmind.actions.toolbox.toggleBrushSelectionMode();\n    // switch to Dotted Freehand tool after selection\n    overmind.actions.toolbox.setSelectedDrawingTool('dottedFreehand');\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const { event, ctx } = params;\n    const mousePos = getMousePos(ctx.canvas, event);\n    overmind.actions.tool.brushSelectionStart(mousePos);\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    overmind.actions.tool.brushSelectionStart(null);\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n\n    const mousePos = getMousePos(canvas, event);\n\n    const start = overmind.state.tool.brushSelectorTool.start;\n    if (!start) {\n      selection.edgeToEdgeCrosshair(ctx, mousePos);\n      onPaint();\n      return;\n    }\n\n    selection.box(ctx, start, mousePos);\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n\n  public onMouseUpOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx",["405"],"/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx",["406"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  omit,\n  isLeftOrRightMouseButton,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class DottedFreehandTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseMove(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n\n    if (event.buttons) {\n      const mousePos = getMousePos(canvas, event);\n      brushHistory.current.drawDot(ctx, mousePos);\n      onPaint();\n    }\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n\n    const mousePos = getMousePos(canvas, event);\n    this.prepareToPaint(isRightMouseButton(event));\n    brushHistory.current.drawDot(ctx, mousePos);\n    onPaint();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const { undoPoint } = params;\n    this.onInit(omit(params, 'event'));\n    undoPoint();\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    this.onInit(omit(params, 'event'));\n  }\n\n  public onMouseEnter(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n    if (isLeftOrRightMouseButton(event)) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(canvas, event);\n      overmind.actions.tool.freeHandToolPrevious(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    if (event.buttons) {\n      return;\n    }\n    clearOverlayCanvas(canvas);\n\n    const mousePos = getMousePos(canvas, event);\n    brushHistory.current.drawDot(ctx, mousePos);\n    onPaint();\n  }\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/primitive.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/util.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx",["407","408","409"],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts",["410","411"],"/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/indexers/DrawImageIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/ColorIndexer.ts",["412","413"],"/Users/jani/Code/Web/dxpaint/src/colorIndex/indexers/GeometricIndexer.ts",["414"],"/Users/jani/Code/Web/dxpaint/src/renderer/PaintingCanvasRenderController.ts",[],"/Users/jani/Code/Web/dxpaint/src/renderer/renderers/ColorIndexDrawImageRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/renderer/renderers/ColorIndexGeometricRenderer.ts",["415"],"/Users/jani/Code/Web/dxpaint/src/core/OverlayCanvasController.ts",["416"],"/Users/jani/Code/Web/dxpaint/src/renderer/renderers/OverlayGeometricRenderer.ts",["417"],"/Users/jani/Code/Web/dxpaint/src/core/PaintingCanvasController.ts",[],"/Users/jani/Code/Web/dxpaint/src/renderer/OverlayCanvasRenderController.ts",[],{"ruleId":"418","severity":1,"message":"419","line":55,"column":10,"nodeType":"420","messageId":"421","endLine":55,"endColumn":20},{"ruleId":"418","severity":1,"message":"419","line":64,"column":10,"nodeType":"420","messageId":"421","endLine":64,"endColumn":27},{"ruleId":"422","severity":1,"message":"423","line":6,"column":10,"nodeType":"424","messageId":"425","endLine":6,"endColumn":34},{"ruleId":"422","severity":1,"message":"426","line":29,"column":17,"nodeType":"424","messageId":"425","endLine":29,"endColumn":43},{"ruleId":"422","severity":1,"message":"426","line":27,"column":17,"nodeType":"424","messageId":"425","endLine":27,"endColumn":43},{"ruleId":"427","severity":2,"message":"428","line":50,"column":59,"nodeType":"424","messageId":"429","endLine":50,"endColumn":67},{"ruleId":"418","severity":1,"message":"419","line":22,"column":26,"nodeType":"420","messageId":"421","endLine":22,"endColumn":39},{"ruleId":"430","severity":2,"message":"431","line":1,"column":1,"nodeType":null,"endLine":3,"endColumn":1,"fix":"432"},{"ruleId":"422","severity":1,"message":"433","line":4,"column":3,"nodeType":"424","messageId":"425","endLine":4,"endColumn":7},{"ruleId":"422","severity":1,"message":"434","line":6,"column":3,"nodeType":"424","messageId":"425","endLine":6,"endColumn":17},{"ruleId":"422","severity":1,"message":"435","line":7,"column":3,"nodeType":"424","messageId":"425","endLine":7,"endColumn":15},{"ruleId":"422","severity":1,"message":"436","line":8,"column":3,"nodeType":"424","messageId":"425","endLine":8,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":20,"column":10,"nodeType":"424","messageId":"425","endLine":20,"endColumn":34},{"ruleId":"422","severity":1,"message":"437","line":21,"column":10,"nodeType":"424","messageId":"425","endLine":21,"endColumn":21},{"ruleId":"422","severity":1,"message":"426","line":31,"column":17,"nodeType":"424","messageId":"425","endLine":31,"endColumn":43},{"ruleId":"422","severity":1,"message":"426","line":28,"column":17,"nodeType":"424","messageId":"425","endLine":28,"endColumn":43},{"ruleId":"422","severity":1,"message":"426","line":34,"column":17,"nodeType":"424","messageId":"425","endLine":34,"endColumn":43},{"ruleId":"422","severity":1,"message":"438","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":22},{"ruleId":"422","severity":1,"message":"439","line":51,"column":13,"nodeType":"424","messageId":"425","endLine":51,"endColumn":23},{"ruleId":"422","severity":1,"message":"440","line":7,"column":52,"nodeType":"424","messageId":"425","endLine":7,"endColumn":57},{"ruleId":"422","severity":1,"message":"440","line":45,"column":37,"nodeType":"424","messageId":"425","endLine":45,"endColumn":42},{"ruleId":"422","severity":1,"message":"426","line":56,"column":23,"nodeType":"424","messageId":"425","endLine":56,"endColumn":58},{"ruleId":"422","severity":1,"message":"441","line":13,"column":10,"nodeType":"424","messageId":"425","endLine":13,"endColumn":33},{"ruleId":"422","severity":1,"message":"426","line":25,"column":17,"nodeType":"424","messageId":"425","endLine":25,"endColumn":43},{"ruleId":"418","severity":1,"message":"419","line":67,"column":7,"nodeType":"420","messageId":"421","endLine":67,"endColumn":30,"suggestions":"442"},{"ruleId":"418","severity":1,"message":"419","line":86,"column":7,"nodeType":"420","messageId":"421","endLine":86,"endColumn":30,"suggestions":"443"},{"ruleId":"444","severity":1,"message":"445","line":92,"column":39,"nodeType":"446","messageId":"447","endLine":92,"endColumn":42,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":26,"column":8,"nodeType":"451","messageId":"452","endLine":26,"endColumn":42},{"ruleId":"449","severity":1,"message":"450","line":133,"column":8,"nodeType":"451","messageId":"452","endLine":133,"endColumn":29},{"ruleId":"422","severity":1,"message":"453","line":25,"column":5,"nodeType":"424","messageId":"425","endLine":25,"endColumn":30},{"ruleId":"422","severity":1,"message":"454","line":140,"column":12,"nodeType":"424","messageId":"425","endLine":140,"endColumn":36},{"ruleId":"422","severity":1,"message":"455","line":5,"column":3,"nodeType":"424","messageId":"425","endLine":5,"endColumn":22},{"ruleId":"422","severity":1,"message":"455","line":7,"column":3,"nodeType":"424","messageId":"425","endLine":7,"endColumn":22},{"ruleId":"422","severity":1,"message":"456","line":1,"column":10,"nodeType":"424","messageId":"425","endLine":1,"endColumn":21},{"ruleId":"422","severity":1,"message":"455","line":6,"column":3,"nodeType":"424","messageId":"425","endLine":6,"endColumn":22},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/no-unused-vars","'PaintingCanvasController' is defined but never used.","Identifier","unusedVar","'params' is defined but never used.","@typescript-eslint/ban-types","Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.","bannedTypeMessage","prettier/prettier","Delete `⏎⏎`",{"range":"457","text":"458"},"'line' is defined but never used.","'unfilledCircle' is defined but never used.","'filledCircle' is defined but never used.","'filledRect' is defined but never used.","'pointEquals' is defined but never used.","'blobToCanvas' is defined but never used.","'colorIndex' is assigned a value but never used.","'state' is defined but never used.","'overlayCanvasController' is defined but never used.",["459"],["460"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["461","462"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'backgroundColorId' is defined but never used.","'index' is defined but never used.","'canvasToWebGLCoordY' is defined but never used.","'CustomBrush' is defined but never used.",[0,2],"",{"messageId":"463","fix":"464","desc":"465"},{"messageId":"463","fix":"466","desc":"465"},{"messageId":"467","fix":"468","desc":"469"},{"messageId":"470","fix":"471","desc":"472"},"suggestOptionalChain",{"range":"473","text":"474"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"475","text":"474"},"suggestUnknown",{"range":"476","text":"477"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"476","text":"478"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2254,2255],"?.",[2893,2894],[3074,3077],"unknown","never"]