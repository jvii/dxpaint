[{"/Users/jani/Code/Web/dxpaint/src/index.tsx":"1","/Users/jani/Code/Web/dxpaint/src/components/App.tsx":"2","/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx":"3","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx":"4","/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx":"5","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx":"6","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts":"7","/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts":"8","/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts":"9","/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts":"10","/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx":"11","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx":"12","/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx":"13","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts":"14","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts":"15","/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts":"16","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts":"17","/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts":"18","/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts":"19","/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts":"20","/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx":"21","/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx":"22","/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx":"23","/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx":"24","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx":"25","/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx":"26","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts":"27","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx":"28","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx":"29","/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx":"30","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts":"31","/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts":"32","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts":"33","/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts":"34","/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx":"35","/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx":"36","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx":"37","/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx":"38","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx":"39","/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx":"40","/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx":"41","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx":"42","/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx":"43","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx":"44","/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx":"45","/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx":"46","/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx":"47","/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx":"48","/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts":"49","/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts":"50","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts":"51","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx":"52","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx":"53","/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts":"54","/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts":"55","/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx":"56","/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx":"57","/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx":"58","/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx":"59","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts":"60","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts":"61","/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx":"62","/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx":"63","/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts":"64","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts":"65","/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx":"66","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts":"67","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts":"68","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx":"69","/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx":"70","/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts":"71","/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx":"72","/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx":"73","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts":"74","/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts":"75","/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts":"76","/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx":"77","/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts":"78","/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx":"79","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricIndexer.ts":"80","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageRenderer.ts":"81","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricRenderer.ts":"82","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/PaintingCanvasController.ts":"83","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageIndexer.ts":"84","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayCanvasController.ts":"85","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayGeometricRenderer.ts":"86","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayMainCanvasRenderer.ts":"87","/Users/jani/Code/Web/dxpaint/src/canvas/util/util.ts":"88","/Users/jani/Code/Web/dxpaint/src/canvas/ZoomCanvasRenderer.ts":"89","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/ColorIndexer.ts":"90","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/MainCanvasRenderer.ts":"91","/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayDrawImageRenderer.ts":"92","/Users/jani/Code/Web/dxpaint/src/domain/LineV.ts":"93","/Users/jani/Code/Web/dxpaint/src/domain/LineH.ts":"94","/Users/jani/Code/Web/dxpaint/src/domain/Line.ts":"95","/Users/jani/Code/Web/dxpaint/src/canvas/util/webglUtil.ts":"96"},{"size":758,"mtime":1581006660054,"results":"97","hashOfConfig":"98"},{"size":1647,"mtime":1610123744119,"results":"99","hashOfConfig":"98"},{"size":2303,"mtime":1587397395180,"results":"100","hashOfConfig":"98"},{"size":1650,"mtime":1587397383935,"results":"101","hashOfConfig":"98"},{"size":4162,"mtime":1619598051307,"results":"102","hashOfConfig":"98"},{"size":1341,"mtime":1609964713351,"results":"103","hashOfConfig":"98"},{"size":99,"mtime":1570358386366,"results":"104","hashOfConfig":"98"},{"size":99,"mtime":1589653071467,"results":"105","hashOfConfig":"98"},{"size":99,"mtime":1581162181250,"results":"106","hashOfConfig":"98"},{"size":407,"mtime":1613232457299,"results":"107","hashOfConfig":"98"},{"size":5403,"mtime":1619940548185,"results":"108","hashOfConfig":"109"},{"size":712,"mtime":1586637521430,"results":"110","hashOfConfig":"109"},{"size":5724,"mtime":1619871501250,"results":"111","hashOfConfig":"109"},{"size":103,"mtime":1589645340777,"results":"112","hashOfConfig":"109"},{"size":238,"mtime":1589698799652,"results":"113","hashOfConfig":"98"},{"size":936,"mtime":1619869526700,"results":"114","hashOfConfig":"109"},{"size":2307,"mtime":1587665133808,"results":"115","hashOfConfig":"98"},{"size":3939,"mtime":1606591580738,"results":"116","hashOfConfig":"109"},{"size":775,"mtime":1598628605933,"results":"117","hashOfConfig":"98"},{"size":11765,"mtime":1619859444721,"results":"118","hashOfConfig":"109"},{"size":3432,"mtime":1619861668937,"results":"119","hashOfConfig":"109"},{"size":2427,"mtime":1598195635333,"results":"120","hashOfConfig":"109"},{"size":5764,"mtime":1619857513669,"results":"121","hashOfConfig":"109"},{"size":3773,"mtime":1619860109677,"results":"122","hashOfConfig":"109"},{"size":2297,"mtime":1619870066504,"results":"123","hashOfConfig":"109"},{"size":749,"mtime":1606592951751,"results":"124","hashOfConfig":"98"},{"size":1069,"mtime":1609948473281,"results":"125","hashOfConfig":"109"},{"size":419,"mtime":1586636737515,"results":"126","hashOfConfig":"98"},{"size":1292,"mtime":1615622215367,"results":"127","hashOfConfig":"109"},{"size":448,"mtime":1606592971846,"results":"128","hashOfConfig":"98"},{"size":990,"mtime":1606591610390,"results":"129","hashOfConfig":"98"},{"size":163,"mtime":1616686264476,"results":"130","hashOfConfig":"98"},{"size":787,"mtime":1610395467992,"results":"131","hashOfConfig":"98"},{"size":3492,"mtime":1598088214899,"results":"132","hashOfConfig":"98"},{"size":2977,"mtime":1619860215302,"results":"133","hashOfConfig":"109"},{"size":2903,"mtime":1619857572887,"results":"134","hashOfConfig":"109"},{"size":1686,"mtime":1596966551515,"results":"135","hashOfConfig":"98"},{"size":3116,"mtime":1619857475022,"results":"136","hashOfConfig":"109"},{"size":4628,"mtime":1619857594785,"results":"137","hashOfConfig":"109"},{"size":620,"mtime":1609948514564,"results":"138","hashOfConfig":"109"},{"size":1550,"mtime":1619884493832,"results":"139","hashOfConfig":"109"},{"size":1328,"mtime":1576359001814,"results":"140","hashOfConfig":"98"},{"size":3175,"mtime":1619940667957,"results":"141","hashOfConfig":"109"},{"size":849,"mtime":1582737330219,"results":"142","hashOfConfig":"98"},{"size":2134,"mtime":1618037345519,"results":"143","hashOfConfig":"98"},{"size":794,"mtime":1589698776952,"results":"144","hashOfConfig":"98"},{"size":5166,"mtime":1619940495503,"results":"145","hashOfConfig":"109"},{"size":1300,"mtime":1619868663600,"results":"146","hashOfConfig":"109"},{"size":99,"mtime":1570358390587,"results":"147","hashOfConfig":"98"},{"size":99,"mtime":1570358382606,"results":"148","hashOfConfig":"98"},{"size":99,"mtime":1570358454848,"results":"149","hashOfConfig":"98"},{"size":479,"mtime":1586285629987,"results":"150","hashOfConfig":"109"},{"size":691,"mtime":1582737314794,"results":"151","hashOfConfig":"98"},{"size":197,"mtime":1589653419630,"results":"152","hashOfConfig":"98"},{"size":1451,"mtime":1619869593932,"results":"153","hashOfConfig":"109"},{"size":2633,"mtime":1596966551507,"results":"154","hashOfConfig":"109"},{"size":3987,"mtime":1619857456226,"results":"155","hashOfConfig":"109"},{"size":1250,"mtime":1617126089377,"results":"156","hashOfConfig":"109"},{"size":2013,"mtime":1619250240403,"results":"157","hashOfConfig":"98"},{"size":99,"mtime":1589645298846,"results":"158","hashOfConfig":"98"},{"size":1651,"mtime":1617126089306,"results":"159","hashOfConfig":"98"},{"size":3790,"mtime":1619857611548,"results":"160","hashOfConfig":"109"},{"size":3797,"mtime":1596966551513,"results":"161","hashOfConfig":"98"},{"size":99,"mtime":1570358463891,"results":"162","hashOfConfig":"98"},{"size":3476,"mtime":1606591793814,"results":"163","hashOfConfig":"109"},{"size":2990,"mtime":1619871636241,"results":"164","hashOfConfig":"109"},{"size":221,"mtime":1609964687396,"results":"165","hashOfConfig":"98"},{"size":94,"mtime":1609948309696,"results":"166","hashOfConfig":"98"},{"size":1140,"mtime":1610122119190,"results":"167","hashOfConfig":"98"},{"size":2782,"mtime":1610122387748,"results":"168","hashOfConfig":"98"},{"size":1249,"mtime":1619940421414,"results":"169","hashOfConfig":"109"},{"size":3363,"mtime":1619868670057,"results":"170","hashOfConfig":"109"},{"size":6806,"mtime":1619868913308,"results":"171","hashOfConfig":"109"},{"size":99,"mtime":1609948228471,"results":"172","hashOfConfig":"98"},{"size":129,"mtime":1589653235884,"results":"173","hashOfConfig":"109"},{"size":424,"mtime":1611407191206,"results":"174","hashOfConfig":"109"},{"size":758,"mtime":1616082227415,"results":"175","hashOfConfig":"98"},{"size":5183,"mtime":1615012131754,"results":"176","hashOfConfig":"98"},{"size":4028,"mtime":1584903623805,"results":"177","hashOfConfig":"98"},{"size":5275,"mtime":1619191509501,"results":"178","hashOfConfig":"109"},{"size":2086,"mtime":1619184850511,"results":"179","hashOfConfig":"109"},{"size":4218,"mtime":1619191725461,"results":"180","hashOfConfig":"98"},{"size":9219,"mtime":1619940474768,"results":"181","hashOfConfig":"109"},{"size":5828,"mtime":1619191551996,"results":"182","hashOfConfig":"109"},{"size":5299,"mtime":1619860120527,"results":"183","hashOfConfig":"109"},{"size":4787,"mtime":1619245365397,"results":"184","hashOfConfig":"109"},{"size":1557,"mtime":1618243240466,"results":"185","hashOfConfig":"109"},{"size":1638,"mtime":1619191683528,"results":"186","hashOfConfig":"98"},{"size":1401,"mtime":1618043289183,"results":"187","hashOfConfig":"98"},{"size":4960,"mtime":1619885293571,"results":"188","hashOfConfig":"109"},{"size":1177,"mtime":1619940781531,"results":"189","hashOfConfig":"109"},{"size":5681,"mtime":1619244993476,"results":"190","hashOfConfig":"98"},{"size":565,"mtime":1618726558340,"results":"191","hashOfConfig":"109"},{"size":567,"mtime":1619191463704,"results":"192","hashOfConfig":"98"},{"size":180,"mtime":1618674251371,"results":"193","hashOfConfig":"98"},{"size":1587,"mtime":1617636966253,"results":"194","hashOfConfig":"109"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},"1plr3f1",{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e7kwag",{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"218"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"197"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"215"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jani/Code/Web/dxpaint/src/index.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/App.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx",["404","405"],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx",[],"/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx",["406","407","408"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n  pointEquals,\n  points8Connected,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class FreehandTool implements Tool {\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.freeHandToolPrevious(null);\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseMove(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    if (event.buttons && overmind.state.tool.freehandTool.previous) {\n      const mousePos = getMousePos(canvas, event);\n      const start = overmind.state.tool.freehandTool.previous;\n      const end = mousePos;\n      if (pointEquals(start, end)) {\n        return; // this point has already been drawn to canvas\n      }\n      if (points8Connected(start, end)) {\n        brushHistory.current.drawPoint(end, paintingCanvasController);\n      } else {\n        brushHistory.current.drawLine(start, end, paintingCanvasController);\n      }\n      overmind.actions.tool.freeHandToolPrevious(end);\n    }\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n    this.prepareToPaint(isRightMouseButton(event));\n    brushHistory.current.drawPoint(mousePos, paintingCanvasController);\n    overmind.actions.tool.freeHandToolPrevious(mousePos);\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const { undoPoint } = params;\n    this.onInit(omit(params, 'event'));\n    undoPoint();\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    this.onInit(omit(params, 'event'));\n  }\n\n  public onMouseEnter(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n    if (isLeftOrRightMouseButton(event)) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(canvas, event);\n      overmind.actions.tool.freeHandToolPrevious(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n    if (event.buttons) {\n      return;\n    }\n    //clearOverlayCanvas(canvas);\n    const mousePos = getMousePos(canvas, event);\n    brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n  }\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    overlayCanvasController.clear();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    overlayCanvasController.clear();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx",["409"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class AirbrushTool implements Tool {\n  private timeout = 0;\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseMove(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    const mousePos = getMousePos(canvas, event);\n    overmind.actions.tool.airbrushToolPosition(mousePos);\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const { event, ctx, onPaint } = params;\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const draw = (ctx: CanvasRenderingContext2D, onPaint: Function): void => {\n      //TODO: draw in bigger batches, maybe drawDot should accept an array? Or new method\n      // drawDots\n      for (let i = 50; i--; ) {\n        const angle = getRandomFloat(0, Math.PI * 2);\n        const radius = getRandomFloat(0, 20);\n        if (overmind.state.tool.airbrushTool.position) {\n          brushHistory.current.drawPoint(\n            {\n              x: overmind.state.tool.airbrushTool.position.x + radius * Math.cos(angle),\n              y: overmind.state.tool.airbrushTool.position.y + radius * Math.sin(angle),\n            },\n            paintingCanvasController\n          );\n        }\n      }\n      onPaint();\n      this.timeout = setTimeout(draw, 20, ctx, onPaint);\n    };\n\n    this.prepareToPaint(isRightMouseButton(event));\n    this.timeout = setTimeout(draw, 20, ctx, onPaint);\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const { undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    undoPoint();\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    const { event, undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    if (isLeftOrRightMouseButton(event)) {\n      undoPoint();\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    if (event.buttons) {\n      return;\n    }\n    clearOverlayCanvas(canvas);\n\n    const mousePos = getMousePos(canvas, event);\n    brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n    onPaint();\n  }\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    overlayCanvasController.clear();\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    overlayCanvasController.clear();\n    onPaint();\n  }\n}\n\nfunction getRandomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n",[],"/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx",["410"],"export class Throttle {\n  private milliSecs: number;\n  private lastFunc: NodeJS.Timeout | null;\n  private lastRan: number | null;\n\n  public constructor(milliSecs: number) {\n    this.milliSecs = milliSecs;\n    this.lastFunc = null;\n    this.lastRan = null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public call(func: Function): void {\n    if (!this.lastRan) {\n      func();\n      this.lastRan = Date.now();\n    } else {\n      if (this.lastFunc) {\n        clearTimeout(this.lastFunc);\n      }\n      this.lastFunc = setTimeout(() => {\n        if (Date.now() - this.lastRan! >= this.milliSecs) {\n          func();\n          this.lastRan = Date.now();\n        }\n      }, this.milliSecs - (Date.now() - this.lastRan));\n    }\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx",["411","412"],"/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx",["413","414"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { Throttle } from './util/Throttle';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\nimport { paintingCanvasController } from '../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../canvas/overlayCanvas/OverlayCanvasController';\n\nexport class CurveTool implements Tool {\n  private throttle = new Throttle(50);\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.curveToolReset();\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      undoPoint,\n      onPaint,\n    } = params;\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      return;\n    }\n\n    const mousePos = getMousePos(canvas, event);\n    const endPoint = overmind.state.tool.curveTool.end;\n\n    if (endPoint) {\n      brushHistory.current.drawCurve(startPoint, endPoint, mousePos, paintingCanvasController);\n      undoPoint();\n      onPaint();\n      this.onInit(omit(params, 'event'));\n    } else {\n      overmind.actions.tool.curveToolEnd(mousePos);\n    }\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    if (!overmind.state.tool.curveTool.end) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(canvas, event);\n      overmind.actions.tool.curveToolStart(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      clearOverlayCanvas(canvas);\n      brushHistory.current.drawPoint(mousePos, overlayCanvasController);\n      onPaint();\n      return;\n    }\n\n    const endPoint = overmind.state.tool.curveTool.end;\n    if (endPoint) {\n      brushHistory.current.drawCurve(startPoint, endPoint, mousePos, overlayCanvasController);\n    } else if (isLeftOrRightMouseButton(event)) {\n      brushHistory.current.drawLine(startPoint, mousePos, overlayCanvasController);\n    }\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const { onPaint } = params;\n    overlayCanvasController.clear();\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx",["415"],"/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx",["416"],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx",["417"],"import React, { useRef } from 'react';\nimport { Button, Slider } from '@material-ui/core';\nimport './PaletteEditor.css';\nimport { useOvermind } from '../../overmind';\nimport { Color } from '../../types';\nimport { CanvasState } from '../canvas/CanvasState';\nimport { paintingCanvasController } from '../../canvas/paintingCanvas/PaintingCanvasController';\nimport { overlayCanvasController } from '../../canvas/overlayCanvas/OverlayCanvasController';\n\ninterface Props {\n  canvasState: CanvasState;\n}\n\nexport function PaletteEditor({ canvasState }: Props): JSX.Element | null {\n  const { state, actions } = useOvermind();\n\n  const overlayRef = useRef<HTMLDivElement>(document.createElement('div'));\n\n  const { mainCanvas } = canvasState;\n\n  // eslint-disable-next-line no-constant-condition\n  if (!state.paletteEditor.isOpen) {\n    return null;\n  }\n\n  function setR(value: number) {\n    const newColor: Color = {\n      r: value,\n      g: state.palette.foregroundColor.g,\n      b: state.palette.foregroundColor.b,\n    };\n    actions.palette.editColor({ colorId: state.palette.foregroundColorId, newColor: newColor });\n    paintingCanvasController.updatePalette();\n    overlayCanvasController.updatePalette();\n  }\n\n  return (\n    <>\n      <div className=\"modal-overlay\" ref={overlayRef}>\n        <div className=\"palette-editor-modal\">\n          <div className=\"modal-header\">\n            <p>Palette Editor</p>\n          </div>\n          <div className=\"sliders\">\n            <Slider\n              defaultValue={2}\n              aria-labelledby=\"discrete-slider-small-steps\"\n              step={1}\n              marks\n              min={0}\n              max={255}\n              valueLabelDisplay=\"auto\"\n              orientation=\"vertical\"\n              onChange={(event, value) => setR(Number(value))}\n            />\n          </div>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={actions.paletteEditor.close}>\n            OK\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={actions.paletteEditor.close}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx",["418"],"/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx",["419"],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts",["420","421"],"/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx",["422"],"/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx",["423","424"],"/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx",["425","426","427","428"],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx",["429"],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx",["430","431","432"],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/UndoBuffer.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/serviceWorker.ts",["433","434"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/FloodFillTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/GeometricRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/PaintingCanvasController.ts",["435"],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/program/DrawImageIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayCanvasController.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayGeometricRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/OverlayMainCanvasRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/util/util.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/ZoomCanvasRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/ColorIndexer.ts",["436"],"import { GeometricIndexer } from './program/GeometricIndexer';\nimport { DrawImageIndexer } from './program/DrawImageIndexer';\nimport { Line, Point } from '../../types';\nimport { CustomBrush } from '../../brush/CustomBrush';\nimport { visualiseTexture } from '../util/util';\nimport { LineV } from '../../domain/LineV';\nimport { LineH } from '../../domain/LineH';\nimport { overmind } from '../..';\n\ntype GLBuffers = {\n  colorIndexFramebuffer: WebGLFramebuffer;\n  vertexBuffer: WebGLBuffer;\n  textureCoordBuffer: WebGLBuffer;\n};\n\nexport class ColorIndexer {\n  private gl: WebGLRenderingContext;\n  private colorIndexFramebuffer: WebGLFramebuffer;\n  private geometricIndexer: GeometricIndexer;\n  private drawImageIndexer: DrawImageIndexer;\n\n  constructor(gl: WebGLRenderingContext, buffers: GLBuffers) {\n    this.gl = gl;\n    this.colorIndexFramebuffer = buffers.colorIndexFramebuffer;\n\n    // create indexers\n\n    this.geometricIndexer = new GeometricIndexer(gl, buffers.colorIndexFramebuffer);\n    this.drawImageIndexer = new DrawImageIndexer(gl, buffers);\n  }\n\n  points(points: Point[], colorIndex: number): void {\n    this.geometricIndexer.indexPoints(points, colorIndex);\n  }\n\n  lines(lines: (LineH | LineV)[], colorIndex: number): void {\n    this.geometricIndexer.indexLines(lines, colorIndex);\n  }\n\n  quad(start: Point, end: Point, colorIndex: number): void {\n    this.geometricIndexer.indexQuad(start, end, colorIndex);\n  }\n\n  drawImage(points: Point[], brush: CustomBrush): void {\n    this.drawImageIndexer.indexDrawImage(points, brush);\n  }\n\n  getIndex(): Uint8Array {\n    const gl = this.gl;\n\n    const width = overmind.state.canvas.resolution.width;\n    const height = overmind.state.canvas.resolution.height;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.colorIndexFramebuffer);\n    this.colorIndexFramebuffer;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return pixels;\n  }\n\n  setIndex(colorIndex: Uint8Array): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0);\n\n    const targetTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, targetTexture);\n\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const targetTextureWidth = overmind.state.canvas.resolution.width;\n    const targetTextureHeight = overmind.state.canvas.resolution.height;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      targetTextureWidth,\n      targetTextureHeight,\n      border,\n      format,\n      type,\n      colorIndex\n    );\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    gl.viewport(0, 0, targetTextureWidth, targetTextureHeight);\n\n    // attach the texture as the first color attachment of the framebuffer\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.colorIndexFramebuffer);\n    const attachmentPoint = gl.COLOR_ATTACHMENT0;\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachmentPoint, gl.TEXTURE_2D, targetTexture, level);\n  }\n\n  getAreaFromIndex(\n    x: number, // canvas coord (origin upper left corner)\n    y: number, // canvas coord (origin upper left corner)\n    width: number, // canvas coord, can be negative\n    height: number // canvas coord, can be negative\n  ): Uint8Array | undefined {\n    const gl = this.gl;\n\n    // for readPixels we need to define the area with:\n    // - lower left corner of the area and\n    // - width and height as positive integers\n    // Texture coordinates\n\n    let rectLowerLeftX: number;\n    let rectLowerLeftY: number;\n\n    if (width < 0) {\n      rectLowerLeftX = x - Math.abs(width);\n    } else {\n      rectLowerLeftX = x;\n    }\n\n    if (height < 0) {\n      rectLowerLeftY = gl.drawingBufferHeight - y;\n    } else {\n      rectLowerLeftY = gl.drawingBufferHeight - y - Math.abs(height);\n    }\n\n    const pixels = new Uint8Array(Math.abs(width) * Math.abs(height) * 4);\n    console.log('canvas: x:' + x + ' y: ' + y + ' w: ' + width + ' h: ' + height);\n    console.log(\n      'texture: x:' +\n        rectLowerLeftX +\n        ' y: ' +\n        rectLowerLeftY +\n        ' w: ' +\n        Math.abs(width) +\n        ' h: ' +\n        Math.abs(height)\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.colorIndexFramebuffer);\n    gl.readPixels(\n      rectLowerLeftX,\n      rectLowerLeftY,\n      Math.abs(width),\n      Math.abs(height),\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return pixels;\n  }\n\n  // testing, debugging purposes only\n  visualiseIndex(): void {\n    const gl = this.gl;\n\n    const index = this.getIndex();\n    const width = gl.drawingBufferWidth;\n    visualiseTexture(index, width);\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/canvas/paintingCanvas/MainCanvasRenderer.ts",["437"],"/Users/jani/Code/Web/dxpaint/src/canvas/overlayCanvas/program/OverlayDrawImageRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/domain/LineV.ts",[],"/Users/jani/Code/Web/dxpaint/src/domain/LineH.ts",[],"/Users/jani/Code/Web/dxpaint/src/domain/Line.ts",[],"/Users/jani/Code/Web/dxpaint/src/canvas/util/webglUtil.ts",[],{"ruleId":"438","severity":1,"message":"439","line":55,"column":10,"nodeType":"440","messageId":"441","endLine":55,"endColumn":20},{"ruleId":"438","severity":1,"message":"439","line":64,"column":10,"nodeType":"440","messageId":"441","endLine":64,"endColumn":27},{"ruleId":"442","severity":1,"message":"443","line":28,"column":17,"nodeType":"444","messageId":"445","endLine":28,"endColumn":43},{"ruleId":"442","severity":1,"message":"443","line":109,"column":29,"nodeType":"444","messageId":"445","endLine":109,"endColumn":71},{"ruleId":"442","severity":1,"message":"443","line":113,"column":30,"nodeType":"444","messageId":"445","endLine":113,"endColumn":72},{"ruleId":"442","severity":1,"message":"443","line":29,"column":17,"nodeType":"444","messageId":"445","endLine":29,"endColumn":43},{"ruleId":"438","severity":1,"message":"439","line":22,"column":26,"nodeType":"440","messageId":"441","endLine":22,"endColumn":39},{"ruleId":"442","severity":1,"message":"443","line":31,"column":17,"nodeType":"444","messageId":"445","endLine":31,"endColumn":43},{"ruleId":"442","severity":1,"message":"446","line":45,"column":7,"nodeType":"444","messageId":"445","endLine":45,"endColumn":10},{"ruleId":"442","severity":1,"message":"443","line":30,"column":17,"nodeType":"444","messageId":"445","endLine":30,"endColumn":43},{"ruleId":"442","severity":1,"message":"446","line":44,"column":7,"nodeType":"444","messageId":"445","endLine":44,"endColumn":10},{"ruleId":"442","severity":1,"message":"443","line":33,"column":17,"nodeType":"444","messageId":"445","endLine":33,"endColumn":43},{"ruleId":"442","severity":1,"message":"447","line":6,"column":10,"nodeType":"444","messageId":"445","endLine":6,"endColumn":21},{"ruleId":"442","severity":1,"message":"448","line":19,"column":11,"nodeType":"444","messageId":"445","endLine":19,"endColumn":21},{"ruleId":"442","severity":1,"message":"449","line":14,"column":27,"nodeType":"444","messageId":"445","endLine":14,"endColumn":38},{"ruleId":"442","severity":1,"message":"450","line":4,"column":10,"nodeType":"444","messageId":"445","endLine":4,"endColumn":21},{"ruleId":"442","severity":1,"message":"451","line":7,"column":52,"nodeType":"444","messageId":"445","endLine":7,"endColumn":57},{"ruleId":"442","severity":1,"message":"451","line":45,"column":37,"nodeType":"444","messageId":"445","endLine":45,"endColumn":42},{"ruleId":"442","severity":1,"message":"443","line":56,"column":23,"nodeType":"444","messageId":"445","endLine":56,"endColumn":58},{"ruleId":"442","severity":1,"message":"452","line":4,"column":10,"nodeType":"444","messageId":"445","endLine":4,"endColumn":34},{"ruleId":"442","severity":1,"message":"453","line":17,"column":11,"nodeType":"444","messageId":"445","endLine":17,"endColumn":19},{"ruleId":"442","severity":1,"message":"454","line":2,"column":10,"nodeType":"444","messageId":"445","endLine":2,"endColumn":20},{"ruleId":"442","severity":1,"message":"455","line":37,"column":38,"nodeType":"444","messageId":"445","endLine":37,"endColumn":50},{"ruleId":"442","severity":1,"message":"456","line":37,"column":52,"nodeType":"444","messageId":"445","endLine":37,"endColumn":62},{"ruleId":"442","severity":1,"message":"457","line":44,"column":45,"nodeType":"444","messageId":"445","endLine":44,"endColumn":59},{"ruleId":"442","severity":1,"message":"443","line":21,"column":17,"nodeType":"444","messageId":"445","endLine":21,"endColumn":43},{"ruleId":"438","severity":1,"message":"439","line":67,"column":7,"nodeType":"440","messageId":"441","endLine":67,"endColumn":30,"suggestions":"458"},{"ruleId":"438","severity":1,"message":"439","line":86,"column":7,"nodeType":"440","messageId":"441","endLine":86,"endColumn":30,"suggestions":"459"},{"ruleId":"460","severity":1,"message":"461","line":92,"column":39,"nodeType":"462","messageId":"463","endLine":92,"endColumn":42,"suggestions":"464"},{"ruleId":"465","severity":1,"message":"466","line":26,"column":8,"nodeType":"467","messageId":"468","endLine":26,"endColumn":42},{"ruleId":"465","severity":1,"message":"466","line":133,"column":8,"nodeType":"467","messageId":"468","endLine":133,"endColumn":29},{"ruleId":"442","severity":1,"message":"469","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":14},{"ruleId":"442","severity":1,"message":"469","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":14},{"ruleId":"442","severity":1,"message":"469","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":14},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/no-unused-vars","'params' is defined but never used.","Identifier","unusedVar","'ctx' is assigned a value but never used.","'clearCanvas' is defined but never used.","'mainCanvas' is assigned a value but never used.","'canvasState' is defined but never used.","'CustomBrush' is defined but never used.","'state' is defined but never used.","'paintingCanvasController' is defined but never used.","'mousePos' is assigned a value but never used.","'PixelBrush' is defined but never used.","'start' is defined but never used.","'end' is defined but never used.","'height' is defined but never used.",["470"],["471"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["472","473"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'Line' is defined but never used.",{"messageId":"474","fix":"475","desc":"476"},{"messageId":"474","fix":"477","desc":"476"},{"messageId":"478","fix":"479","desc":"480"},{"messageId":"481","fix":"482","desc":"483"},"suggestOptionalChain",{"range":"484","text":"485"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"486","text":"485"},"suggestUnknown",{"range":"487","text":"488"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"487","text":"489"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2289,2290],"?.",[2928,2929],[3109,3112],"unknown","never"]