[{"/Users/jani/Code/Web/dxpaint/src/index.tsx":"1","/Users/jani/Code/Web/dxpaint/src/components/App.tsx":"2","/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx":"3","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx":"4","/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx":"5","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx":"6","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts":"7","/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts":"8","/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts":"9","/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts":"10","/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx":"11","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx":"12","/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx":"13","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts":"14","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts":"15","/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts":"16","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts":"17","/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts":"18","/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts":"19","/Users/jani/Code/Web/dxpaint/src/colorIndex/renderer/RendererContext.ts":"20","/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/FillRectIndexer.ts":"21","/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts":"22","/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx":"23","/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx":"24","/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx":"25","/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx":"26","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx":"27","/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx":"28","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts":"29","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx":"30","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx":"31","/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx":"32","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts":"33","/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts":"34","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts":"35","/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts":"36","/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/IndexerContext.ts":"37","/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx":"38","/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx":"39","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx":"40","/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx":"41","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx":"42","/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx":"43","/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx":"44","/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx":"45","/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx":"46","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx":"47","/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx":"48","/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx":"49","/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx":"50","/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx":"51","/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts":"52","/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts":"53","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts":"54","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx":"55","/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx":"56","/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts":"57","/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts":"58","/Users/jani/Code/Web/dxpaint/src/colorIndex/renderer/ColorIndexRenderer.ts":"59","/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx":"60","/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx":"61","/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx":"62","/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx":"63","/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts":"64","/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts":"65","/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx":"66","/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx":"67","/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts":"68","/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts":"69","/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx":"70","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts":"71","/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts":"72","/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx":"73","/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx":"74","/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/DrawImageIndexer.ts":"75","/Users/jani/Code/Web/dxpaint/src/colorIndex/ColorIndexer.ts":"76","/Users/jani/Code/Web/dxpaint/src/algorithm/primitive.ts":"77","/Users/jani/Code/Web/dxpaint/src/colorIndex/util.ts":"78","/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts":"79","/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx":"80","/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx":"81"},{"size":758,"mtime":1581006660054,"results":"82","hashOfConfig":"83"},{"size":1647,"mtime":1610123744119,"results":"84","hashOfConfig":"83"},{"size":2303,"mtime":1587397395180,"results":"85","hashOfConfig":"83"},{"size":1650,"mtime":1587397383935,"results":"86","hashOfConfig":"83"},{"size":4292,"mtime":1588883165180,"results":"87","hashOfConfig":"83"},{"size":1341,"mtime":1609964713351,"results":"88","hashOfConfig":"83"},{"size":99,"mtime":1570358386366,"results":"89","hashOfConfig":"83"},{"size":99,"mtime":1589653071467,"results":"90","hashOfConfig":"83"},{"size":99,"mtime":1581162181250,"results":"91","hashOfConfig":"83"},{"size":371,"mtime":1598417463850,"results":"92","hashOfConfig":"83"},{"size":4286,"mtime":1596966551506,"results":"93","hashOfConfig":"83"},{"size":712,"mtime":1586637521430,"results":"94","hashOfConfig":"83"},{"size":6649,"mtime":1600503071164,"results":"95","hashOfConfig":"83"},{"size":103,"mtime":1589645340777,"results":"96","hashOfConfig":"83"},{"size":238,"mtime":1589698799652,"results":"97","hashOfConfig":"83"},{"size":994,"mtime":1610288900130,"results":"98","hashOfConfig":"83"},{"size":2307,"mtime":1587665133808,"results":"99","hashOfConfig":"83"},{"size":3939,"mtime":1606591580738,"results":"100","hashOfConfig":"83"},{"size":775,"mtime":1598628605933,"results":"101","hashOfConfig":"83"},{"size":561,"mtime":1599394513632,"results":"102","hashOfConfig":"83"},{"size":4391,"mtime":1610824229473,"results":"103","hashOfConfig":"83"},{"size":11802,"mtime":1611407369993,"results":"104","hashOfConfig":"83"},{"size":3455,"mtime":1611483093823,"results":"105","hashOfConfig":"83"},{"size":2427,"mtime":1598195635333,"results":"106","hashOfConfig":"83"},{"size":5449,"mtime":1598418063310,"results":"107","hashOfConfig":"83"},{"size":3269,"mtime":1598417920855,"results":"108","hashOfConfig":"83"},{"size":3122,"mtime":1598374399045,"results":"109","hashOfConfig":"83"},{"size":749,"mtime":1606592951751,"results":"110","hashOfConfig":"83"},{"size":1069,"mtime":1609948473281,"results":"111","hashOfConfig":"83"},{"size":419,"mtime":1586636737515,"results":"112","hashOfConfig":"83"},{"size":1288,"mtime":1582737326774,"results":"113","hashOfConfig":"83"},{"size":448,"mtime":1606592971846,"results":"114","hashOfConfig":"83"},{"size":990,"mtime":1606591610390,"results":"115","hashOfConfig":"83"},{"size":163,"mtime":1610827421065,"results":"116","hashOfConfig":"83"},{"size":787,"mtime":1610395467992,"results":"117","hashOfConfig":"83"},{"size":3492,"mtime":1598088214899,"results":"118","hashOfConfig":"83"},{"size":1898,"mtime":1599375764261,"results":"119","hashOfConfig":"83"},{"size":2635,"mtime":1597779378127,"results":"120","hashOfConfig":"83"},{"size":2695,"mtime":1610288995772,"results":"121","hashOfConfig":"83"},{"size":1686,"mtime":1596966551515,"results":"122","hashOfConfig":"83"},{"size":3062,"mtime":1598418004456,"results":"123","hashOfConfig":"83"},{"size":4424,"mtime":1598418176200,"results":"124","hashOfConfig":"83"},{"size":620,"mtime":1609948514564,"results":"125","hashOfConfig":"83"},{"size":1542,"mtime":1610828201690,"results":"126","hashOfConfig":"83"},{"size":1328,"mtime":1576359001814,"results":"127","hashOfConfig":"83"},{"size":3222,"mtime":1610829556828,"results":"128","hashOfConfig":"83"},{"size":849,"mtime":1582737330219,"results":"129","hashOfConfig":"83"},{"size":2009,"mtime":1610176734529,"results":"130","hashOfConfig":"83"},{"size":794,"mtime":1589698776952,"results":"131","hashOfConfig":"83"},{"size":5313,"mtime":1610813778978,"results":"132","hashOfConfig":"83"},{"size":1298,"mtime":1589699509988,"results":"133","hashOfConfig":"83"},{"size":99,"mtime":1570358390587,"results":"134","hashOfConfig":"83"},{"size":99,"mtime":1570358382606,"results":"135","hashOfConfig":"83"},{"size":99,"mtime":1570358454848,"results":"136","hashOfConfig":"83"},{"size":479,"mtime":1586285629987,"results":"137","hashOfConfig":"83"},{"size":691,"mtime":1582737314794,"results":"138","hashOfConfig":"83"},{"size":197,"mtime":1589653419630,"results":"139","hashOfConfig":"83"},{"size":1520,"mtime":1598417624264,"results":"140","hashOfConfig":"83"},{"size":5104,"mtime":1611481481404,"results":"141","hashOfConfig":"83"},{"size":2633,"mtime":1596966551507,"results":"142","hashOfConfig":"83"},{"size":3737,"mtime":1598417952306,"results":"143","hashOfConfig":"83"},{"size":1157,"mtime":1610807129274,"results":"144","hashOfConfig":"83"},{"size":2017,"mtime":1597691407920,"results":"145","hashOfConfig":"83"},{"size":99,"mtime":1589645298846,"results":"146","hashOfConfig":"83"},{"size":1440,"mtime":1598629750358,"results":"147","hashOfConfig":"83"},{"size":3623,"mtime":1598418204617,"results":"148","hashOfConfig":"83"},{"size":3797,"mtime":1596966551513,"results":"149","hashOfConfig":"83"},{"size":99,"mtime":1570358463891,"results":"150","hashOfConfig":"83"},{"size":3476,"mtime":1606591793814,"results":"151","hashOfConfig":"83"},{"size":2892,"mtime":1598418027518,"results":"152","hashOfConfig":"83"},{"size":221,"mtime":1609964687396,"results":"153","hashOfConfig":"83"},{"size":94,"mtime":1609948309696,"results":"154","hashOfConfig":"83"},{"size":1140,"mtime":1610122119190,"results":"155","hashOfConfig":"83"},{"size":2782,"mtime":1610122387748,"results":"156","hashOfConfig":"83"},{"size":6009,"mtime":1610122740164,"results":"157","hashOfConfig":"83"},{"size":7173,"mtime":1610826477794,"results":"158","hashOfConfig":"83"},{"size":3077,"mtime":1611469775022,"results":"159","hashOfConfig":"83"},{"size":1186,"mtime":1610289583940,"results":"160","hashOfConfig":"83"},{"size":1587,"mtime":1610829780331,"results":"161","hashOfConfig":"83"},{"size":3361,"mtime":1610827576318,"results":"162","hashOfConfig":"83"},{"size":6133,"mtime":1611483033881,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"1plr3f1",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"166"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"182"},{"filePath":"224","messages":"225","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"166"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"182"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"182"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"182"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"182"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":3,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jani/Code/Web/dxpaint/src/index.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/App.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/ZoomCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasSyncHandler.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/BuiltInBrushes.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorIndicator.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/index.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/BrushHistory.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/Canvas.tsx",["340","341"],"import React, { useEffect, useRef } from 'react';\nimport { CanvasStateAction } from './CanvasState';\nimport { useInitTool, useUndo, useFillStyle } from './hooks';\nimport { useOvermind } from '../../overmind';\nimport { getEventHandler, getEventHandlerOverlay } from '../../tools/util/util';\nimport { EventHandlerParams, EventHandlerParamsOverlay } from '../../tools/Tool';\nimport './Canvas.css';\n\ninterface Props {\n  canvasDispatch: React.Dispatch<CanvasStateAction>;\n  isZoomCanvas: boolean;\n  zoomFactor?: number;\n}\n\nexport function Canvas({\n  canvasDispatch,\n  isZoomCanvas,\n  zoomFactor = 1,\n}: Props): JSX.Element | null {\n  console.log('render ' + (isZoomCanvas ? 'ZoomCanvas' : 'MainCanvas'));\n  const canvasRef = useRef<HTMLCanvasElement>(document.createElement('canvas'));\n  const overlayCanvasRef = useRef<HTMLCanvasElement>(document.createElement('canvas'));\n\n  useEffect((): void => {\n    canvasDispatch({\n      type: isZoomCanvas ? 'setZoomCanvas' : 'setMainCanvas',\n      elements: { canvas: canvasRef.current, overlay: overlayCanvasRef.current },\n    });\n  }, []);\n\n  const canvasCtx = canvasRef.current.getContext('2d', {\n    alpha: false,\n    desynchronized: false, // desynchronized caused various problems with Windows version of Chrome\n  }) as CanvasRenderingContext2D | null;\n  const overlayCanvasCtx = overlayCanvasRef.current.getContext('2d', {\n    alpha: true,\n    desynchronized: false, // desynchronized caused various problems with Windows version of Chrome\n  }) as CanvasRenderingContext2D | null;\n\n  const { state, actions } = useOvermind();\n\n  const eventHandlerParams: EventHandlerParams = {\n    ctx: canvasCtx!,\n    onPaint: (): void => {\n      actions.canvas.setCanvasModified(isZoomCanvas);\n    },\n    undoPoint: (): void => {\n      actions.undo.setUndoPoint(canvasRef.current);\n    },\n  };\n  const eventHandlerParamsOverlay: EventHandlerParamsOverlay = {\n    ctx: overlayCanvasCtx!,\n    onPaint: (): void => {\n      actions.canvas.setOverlayCanvasModified(isZoomCanvas);\n    },\n  };\n\n  useUndo(canvasRef.current);\n  useInitTool(eventHandlerParams, eventHandlerParamsOverlay, isZoomCanvas);\n\n  useFillStyle(canvasCtx);\n  useFillStyle(overlayCanvasCtx);\n\n  if (!canvasCtx || !overlayCanvasCtx) {\n    return null; // no render\n  }\n\n  const tool = state.toolbox.activeTool;\n\n  const CSSZoom = {\n    width: state.canvas.resolution.width * zoomFactor,\n    height: state.canvas.resolution.height * zoomFactor,\n  };\n\n  return (\n    <>\n      <canvas\n        className=\"canvas\"\n        ref={canvasRef}\n        width={state.canvas.resolution.width}\n        height={state.canvas.resolution.height}\n        style={CSSZoom}\n        onClick={(event): void => {\n          getEventHandler(tool, 'onClick', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onClickOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onMouseDown={(event): void => {\n          getEventHandler(tool, 'onMouseDown', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onMouseDownOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onMouseUp={(event): void => {\n          getEventHandler(tool, 'onMouseUp', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onMouseUpOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onMouseEnter={(event): void => {\n          getEventHandler(tool, 'onMouseEnter', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onMouseEnterOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onMouseLeave={(event): void => {\n          getEventHandler(tool, 'onMouseLeave', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onMouseLeaveOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onMouseMove={(event): void => {\n          getEventHandler(tool, 'onMouseMove', eventHandlerParams)(event);\n          getEventHandlerOverlay(tool, 'onMouseMoveOverlay', eventHandlerParamsOverlay)(event);\n        }}\n        onContextMenu={getEventHandler(tool, 'onContextMenu', eventHandlerParams)}\n      />\n      <canvas\n        className=\"canvas canvas--overlay\"\n        ref={overlayCanvasRef}\n        width={state.canvas.resolution.width}\n        height={state.canvas.resolution.height}\n        style={CSSZoom}\n      />\n    </>\n  );\n}\n","/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemOpen.tsx",[],"/Users/jani/Code/Web/dxpaint/src/brush/CustomBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/state.ts",[],[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/renderer/RendererContext.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/FillRectIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/shape.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/FreehandTool.tsx",["342"],"/Users/jani/Code/Web/dxpaint/src/components/palette/util.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/EllipseTool.tsx",[],[],"/Users/jani/Code/Web/dxpaint/src/tools/AirbrushTool.tsx",["343","344"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class AirbrushTool implements Tool {\n  private timeout = 0;\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseMove(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    const mousePos = getMousePos(canvas, event);\n    overmind.actions.tool.airbrushToolPosition(mousePos);\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const { event, ctx, onPaint } = params;\n\n    const draw = (ctx: CanvasRenderingContext2D, onPaint: Function): void => {\n      for (let i = 50; i--; ) {\n        const angle = getRandomFloat(0, Math.PI * 2);\n        const radius = getRandomFloat(0, 20);\n        if (overmind.state.tool.airbrushTool.position) {\n          brushHistory.current.drawDot(ctx, {\n            x: overmind.state.tool.airbrushTool.position.x + radius * Math.cos(angle),\n            y: overmind.state.tool.airbrushTool.position.y + radius * Math.sin(angle),\n          });\n        }\n      }\n      onPaint();\n      this.timeout = setTimeout(draw, 20, ctx, onPaint);\n    };\n\n    this.prepareToPaint(isRightMouseButton(event));\n    this.timeout = setTimeout(draw, 20, ctx, onPaint);\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const { undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    undoPoint();\n  }\n\n  public onMouseLeave(params: EventHandlerParamsWithEvent): void {\n    const { event, undoPoint } = params;\n    clearTimeout(this.timeout);\n    this.onInit(omit(params, 'event'));\n    if (isLeftOrRightMouseButton(event)) {\n      undoPoint();\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    if (event.buttons) {\n      return;\n    }\n    clearOverlayCanvas(canvas);\n\n    const mousePos = getMousePos(canvas, event);\n    brushHistory.current.drawDot(ctx, mousePos);\n    onPaint();\n  }\n\n  public onMouseDownOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n\nfunction getRandomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n","/Users/jani/Code/Web/dxpaint/src/brush/BuiltInBrushFactory.tsx",["345","346","347"],"import { CustomBrush } from './CustomBrush';\n\n// prettier-ignore\nconst builtInBrushShapes = {\n\n  'dot3x3': ['.@.',\n             '@@@',\n             '.@.',],\n\n  'dot5x5': ['.@@@.',\n             '@@@@@',\n             '@@@@@',\n             '@@@@@',\n             '.@@@.',],\n\n  'dot7x7': ['..@@@..',\n             '.@@@@@.',\n             '@@@@@@@',\n             '@@@@@@@',\n             '@@@@@@@',\n             '.@@@@@.',\n             '..@@@..',],\n\n  'square2x2': ['@@',\n                '@@',],\n\n  'square4x4': ['@@@@',\n                '@@@@',\n                '@@@@',\n                '@@@@',],\n\n  'square6x6': ['@@@@@@',\n                '@@@@@@',\n                '@@@@@@',\n                '@@@@@@',\n                '@@@@@@',\n                '@@@@@@',],\n\n  'square8x8': ['@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',\n                '@@@@@@@@',],\n\n  'dither3x3': ['..@',\n                '@..',\n                '..@',],\n\n  'dither7x6': ['...@...',\n                '.......',\n                '@......',\n                '...@..@',\n                '.......',\n                '...@...',],\n}\n\ntype BuiltInBrushShape = keyof typeof builtInBrushShapes;\n\nexport function createBuiltInBrush(shape: BuiltInBrushShape): CustomBrush {\n  const imageData = createImageDataFor(shape);\n  const canvas = document.createElement('canvas');\n  canvas.height = imageData.height;\n  canvas.width = imageData.width;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new Error('Error retreiving context while creating built-in brush');\n  }\n  ctx.putImageData(imageData, 0, 0);\n  return new CustomBrush(canvas.toDataURL(), createColorInderFor(shape));\n}\n\nfunction createImageDataFor(shape: BuiltInBrushShape): ImageData {\n  const stringBitmap = builtInBrushShapes[shape];\n  const width = stringBitmap[0].length;\n  const height = stringBitmap.length;\n  const imageData = new ImageData(width, height);\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      if (stringBitmap[y].charAt(x) === '@') {\n        imageData.data[(y * width + x) * 4 + 0] = 0;\n        imageData.data[(y * width + x) * 4 + 1] = 0;\n        imageData.data[(y * width + x) * 4 + 2] = 0;\n        imageData.data[(y * width + x) * 4 + 3] = 255;\n      }\n    }\n  }\n  return imageData;\n}\n\nfunction createColorInderFor(shape: BuiltInBrushShape): Uint8Array {\n  const stringBitmap = builtInBrushShapes[shape].reverse(); // flip y as texture y coordinates start from bottom\n  const width = stringBitmap[0].length;\n  const height = stringBitmap.length;\n  const stride = 4;\n  const brushColorIndex = new Uint8Array(width * height * 4).fill(0); // initialize as all zeros (transparent)\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      if (stringBitmap[y].charAt(x) === '@') {\n        // can be any color index value here, as built in brushes are always colorized and don't have an inherent color\n        brushColorIndex[(y * width + x) * stride] = 1;\n      }\n    }\n  }\n  return brushColorIndex;\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/util/Throttle.tsx",["348"],"export class Throttle {\n  private milliSecs: number;\n  private lastFunc: NodeJS.Timeout | null;\n  private lastRan: number | null;\n\n  public constructor(milliSecs: number) {\n    this.milliSecs = milliSecs;\n    this.lastFunc = null;\n    this.lastRan = null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public call(func: Function): void {\n    if (!this.lastRan) {\n      func();\n      this.lastRan = Date.now();\n    } else {\n      if (this.lastFunc) {\n        clearTimeout(this.lastFunc);\n      }\n      this.lastFunc = setTimeout(() => {\n        if (Date.now() - this.lastRan! >= this.milliSecs) {\n          func();\n          this.lastRan = Date.now();\n        }\n      }, this.milliSecs - (Date.now() - this.lastRan));\n    }\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/overmind/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItemSave.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxDualToggleButton.tsx",["349","350"],"/Users/jani/Code/Web/dxpaint/src/tools/util/Debounce.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/state.ts",["351"],"export type State = {\n  currentIndex: number | null;\n  lastUndoRedoTime: number;\n};\n\nexport const state: State = {\n  currentIndex: null,\n  lastUndoRedoTime: 0,\n};\n","/Users/jani/Code/Web/dxpaint/src/overmind/palette/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/tool/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/IndexerContext.ts",[],"/Users/jani/Code/Web/dxpaint/src/brush/PixelBrush.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/LineTool.tsx",["352"],"/* eslint-disable no-undef */\nimport {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftMouseButton,\n  omit,\n} from './util/util';\nimport { Throttle } from './util/Throttle';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class LineTool implements Tool {\n  private throttle = new Throttle(50);\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.lineToolStart(null);\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n      undoPoint,\n    } = params;\n\n    if (!overmind.state.tool.lineTool.start) {\n      return;\n    }\n\n    const mousePos = getMousePos(canvas, event);\n    const start = overmind.state.tool.lineTool.start;\n    const end = mousePos;\n    brushHistory.current.drawLine(ctx, start, end);\n    undoPoint();\n    onPaint();\n    this.onInit(omit(params, 'event'));\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n    this.prepareToPaint(isRightMouseButton(event));\n    const mousePos = getMousePos(canvas, event);\n    overmind.actions.tool.lineToolStart(mousePos);\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n\n    if (\n      overmind.state.tool.lineTool.start &&\n      (isLeftMouseButton(event) || isRightMouseButton(event))\n    ) {\n      const start = overmind.state.tool.lineTool.start;\n      const end = mousePos;\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawLine(ctx, start, end);\n      });\n    } else {\n      clearOverlayCanvas(canvas);\n      brushHistory.current.drawDot(ctx, mousePos);\n    }\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/ZoomInitialPointSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/CurveTool.tsx",["353"],"import {\n  Tool,\n  EventHandlerParamsWithEvent,\n  OverlayEventHandlerParamsWithEvent,\n  EventHandlerParams,\n} from './Tool';\nimport {\n  getMousePos,\n  clearOverlayCanvas,\n  isRightMouseButton,\n  isLeftOrRightMouseButton,\n  omit,\n} from './util/util';\nimport { Throttle } from './util/Throttle';\nimport { overmind } from '../index';\nimport { brushHistory } from '../brush/BrushHistory';\n\nexport class CurveTool implements Tool {\n  private throttle = new Throttle(50);\n\n  private prepareToPaint(withBGColor: boolean): void {\n    if (withBGColor) {\n      overmind.actions.tool.activeToolToBGFillStyle();\n      overmind.actions.brush.toBGBrush();\n    }\n  }\n\n  public onInit(params: EventHandlerParams): void {\n    overmind.actions.tool.curveToolReset();\n    overmind.actions.tool.activeToolToFGFillStyle();\n    overmind.actions.brush.toFGBrush();\n  }\n\n  public onContextMenu(params: EventHandlerParamsWithEvent): void {\n    const { event } = params;\n    event.preventDefault();\n  }\n\n  public onMouseUp(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      undoPoint,\n      onPaint,\n    } = params;\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      return;\n    }\n\n    const mousePos = getMousePos(canvas, event);\n    const endPoint = overmind.state.tool.curveTool.end;\n\n    if (endPoint) {\n      brushHistory.current.drawCurve(ctx, startPoint, endPoint, mousePos);\n      undoPoint();\n      onPaint();\n      this.onInit(omit(params, 'event'));\n    } else {\n      overmind.actions.tool.curveToolEnd(mousePos);\n    }\n  }\n\n  public onMouseDown(params: EventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx: { canvas },\n    } = params;\n\n    if (!overmind.state.tool.curveTool.end) {\n      this.prepareToPaint(isRightMouseButton(event));\n      const mousePos = getMousePos(canvas, event);\n      overmind.actions.tool.curveToolStart(mousePos);\n    }\n  }\n\n  // Overlay\n\n  public onMouseMoveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      event,\n      ctx,\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    const mousePos = getMousePos(canvas, event);\n\n    const startPoint = overmind.state.tool.curveTool.start;\n    if (!startPoint) {\n      clearOverlayCanvas(canvas);\n      brushHistory.current.drawDot(ctx, mousePos);\n      onPaint();\n      return;\n    }\n\n    const endPoint = overmind.state.tool.curveTool.end;\n    if (endPoint) {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawCurve(ctx, startPoint, endPoint, mousePos);\n      });\n    } else if (isLeftOrRightMouseButton(event)) {\n      this.throttle.call((): void => {\n        clearOverlayCanvas(canvas);\n        brushHistory.current.drawLine(ctx, startPoint, mousePos);\n      });\n    }\n    onPaint();\n  }\n\n  public onMouseLeaveOverlay(params: OverlayEventHandlerParamsWithEvent): void {\n    const {\n      ctx: { canvas },\n      onPaint,\n    } = params;\n    clearOverlayCanvas(canvas);\n    onPaint();\n  }\n}\n","/Users/jani/Code/Web/dxpaint/src/tools/PolygonTool.tsx",["354"],"/Users/jani/Code/Web/dxpaint/src/components/dialog/Dialog.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/MainCanvas.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/CanvasState.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/canvas/hooks.tsx",["355"],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxToggleButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/paletteEditor/PaletteEditor.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/GlobalHotkeyManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/Toolbox.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/dialog/DialogManager.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/palette/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/menubar/MenuItem.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/toolbox/buttons/ToolboxActionButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/app/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/brush/actions.ts",["356","357"],"import { Action } from 'overmind';\nimport { Brush } from '../../brush/Brush';\nimport { Mode, BuiltInBrushId, builtInBrushes } from './state';\nimport { CustomBrush } from '../../brush/CustomBrush';\nimport { brushHistory } from '../../brush/BrushHistory';\n\nexport const setBrush: Action<Brush> = ({ state }, brush): void => {\n  brushHistory.set(brush);\n};\n\nexport const selectBuiltInBrush: Action<BuiltInBrushId> = (\n  { state, actions },\n  brushNumber\n): void => {\n  state.brush.selectedBuiltInBrushId = brushNumber;\n  actions.brush.setBrush(builtInBrushes[brushNumber]);\n  actions.brush.setMode('Color');\n};\n\nexport const setMode: Action<Mode> = ({ state }, mode): void => {\n  state.brush.mode = mode;\n  const brush = brushHistory.current;\n  if (brush instanceof CustomBrush) {\n    if (mode === 'Color') {\n      brush.setFGColor(state.palette.foregroundColor);\n      brush.setBGColor(state.palette.backgroundColor);\n      brush.toFGColor();\n    } else if (mode === 'Matte') {\n      brush.setBGColor(state.palette.backgroundColor);\n      brush.toMatte();\n    }\n  }\n};\n\nexport const toFGBrush: Action = ({ state }): void => {\n  const brush = brushHistory.current;\n  if (state.brush.mode === 'Color' && brush instanceof CustomBrush) {\n    brush.toFGColor();\n  }\n  if (state.brush.mode === 'Matte' && brush instanceof CustomBrush) {\n    brush.toMatte();\n  }\n};\n\nexport const toBGBrush: Action = ({ state }): void => {\n  const brush = brushHistory.current;\n  if (brush instanceof CustomBrush) {\n    brush.toBGColor();\n  }\n};\n","/Users/jani/Code/Web/dxpaint/src/colorIndex/renderer/ColorIndexRenderer.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/BrushSelector.tsx",["358"],"/Users/jani/Code/Web/dxpaint/src/tools/CircleTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/ColorSelectorTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/SelectionIndicator.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/dialog/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/canvas/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/RectangleTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/TextTool.tsx",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/index.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/toolbox/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/tools/DottedFreehandTool.tsx",["359"],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/actions.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/paletteEditor/state.ts",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/ColorButton.tsx",[],"/Users/jani/Code/Web/dxpaint/src/components/palette/Palette.tsx",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/indexer/DrawImageIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/ColorIndexer.ts",[],"/Users/jani/Code/Web/dxpaint/src/algorithm/primitive.ts",[],"/Users/jani/Code/Web/dxpaint/src/colorIndex/util.ts",[],"/Users/jani/Code/Web/dxpaint/src/overmind/undo/actions.ts",["360","361"],"/Users/jani/Code/Web/dxpaint/src/components/menubar/Menubar.tsx",[],"/Users/jani/Code/Web/dxpaint/src/tools/util/util.tsx",["362","363","364","365","366","367"],{"ruleId":"368","severity":1,"message":"369","line":43,"column":10,"nodeType":"370","messageId":"371","endLine":43,"endColumn":20},{"ruleId":"368","severity":1,"message":"369","line":52,"column":10,"nodeType":"370","messageId":"371","endLine":52,"endColumn":27},{"ruleId":"372","severity":1,"message":"373","line":27,"column":17,"nodeType":"374","messageId":"375","endLine":27,"endColumn":43},{"ruleId":"372","severity":1,"message":"373","line":27,"column":17,"nodeType":"374","messageId":"375","endLine":27,"endColumn":43},{"ruleId":"376","severity":2,"message":"377","line":50,"column":59,"nodeType":"374","messageId":"378","endLine":50,"endColumn":67},{"ruleId":"379","severity":2,"message":"380","line":94,"column":1,"nodeType":"381","messageId":"382","endLine":94,"endColumn":113},{"ruleId":"379","severity":2,"message":"383","line":98,"column":1,"nodeType":"381","messageId":"382","endLine":98,"endColumn":111},{"ruleId":"379","severity":2,"message":"384","line":102,"column":1,"nodeType":"381","messageId":"382","endLine":102,"endColumn":120},{"ruleId":"368","severity":1,"message":"369","line":22,"column":26,"nodeType":"370","messageId":"371","endLine":22,"endColumn":39},{"ruleId":"385","severity":2,"message":"386","line":41,"column":7,"nodeType":"374","messageId":"387","endLine":41,"endColumn":8,"fix":"388"},{"ruleId":"385","severity":2,"message":"389","line":42,"column":7,"nodeType":"374","messageId":"387","endLine":42,"endColumn":8,"fix":"390"},{"ruleId":"391","severity":2,"message":"392","line":1,"column":1,"nodeType":null,"endLine":3,"endColumn":1,"fix":"393"},{"ruleId":"372","severity":1,"message":"373","line":29,"column":17,"nodeType":"374","messageId":"375","endLine":29,"endColumn":43},{"ruleId":"372","severity":1,"message":"373","line":28,"column":17,"nodeType":"374","messageId":"375","endLine":28,"endColumn":43},{"ruleId":"372","severity":1,"message":"373","line":34,"column":17,"nodeType":"374","messageId":"375","endLine":34,"endColumn":43},{"ruleId":"372","severity":1,"message":"394","line":5,"column":10,"nodeType":"374","messageId":"375","endLine":5,"endColumn":22},{"ruleId":"372","severity":1,"message":"395","line":7,"column":43,"nodeType":"374","messageId":"375","endLine":7,"endColumn":48},{"ruleId":"372","severity":1,"message":"395","line":45,"column":37,"nodeType":"374","messageId":"375","endLine":45,"endColumn":42},{"ruleId":"372","severity":1,"message":"373","line":56,"column":23,"nodeType":"374","messageId":"375","endLine":56,"endColumn":58},{"ruleId":"372","severity":1,"message":"373","line":25,"column":17,"nodeType":"374","messageId":"375","endLine":25,"endColumn":43},{"ruleId":"372","severity":1,"message":"396","line":1,"column":18,"nodeType":"374","messageId":"375","endLine":1,"endColumn":29},{"ruleId":"372","severity":1,"message":"397","line":5,"column":68,"nodeType":"374","messageId":"375","endLine":5,"endColumn":74},{"ruleId":"368","severity":1,"message":"369","line":67,"column":7,"nodeType":"370","messageId":"371","endLine":67,"endColumn":30,"suggestions":"398"},{"ruleId":"399","severity":2,"message":"400","line":69,"column":22,"nodeType":"401","messageId":"402","endLine":69,"endColumn":24},{"ruleId":"368","severity":1,"message":"369","line":85,"column":7,"nodeType":"370","messageId":"371","endLine":85,"endColumn":30,"suggestions":"403"},{"ruleId":"399","severity":2,"message":"400","line":87,"column":22,"nodeType":"401","messageId":"402","endLine":87,"endColumn":24},{"ruleId":"404","severity":1,"message":"405","line":90,"column":39,"nodeType":"406","messageId":"407","endLine":90,"endColumn":42,"suggestions":"408"},{"ruleId":"376","severity":2,"message":"409","line":182,"column":14,"nodeType":"410","messageId":"378","endLine":182,"endColumn":20},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/no-unused-vars","'params' is defined but never used.","Identifier","unusedVar","@typescript-eslint/ban-types","Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.","bannedTypeMessage","max-len","This line has a length of 112. Maximum allowed is 100.","Program","max","This line has a length of 110. Maximum allowed is 100.","This line has a length of 119. Maximum allowed is 100.","prefer-const","'x' is never reassigned. Use 'const' instead.","useConst",{"range":"411","text":"412"},"'y' is never reassigned. Use 'const' instead.",{"range":"413","text":"412"},"prettier/prettier","Delete `⏎⏎`",{"range":"414","text":"415"},"'blobToCanvas' is defined but never used.","'state' is defined but never used.","'AsyncAction' is defined but never used.","'canvas' is defined but never used.",["416"],"@typescript-eslint/no-empty-function","Unexpected empty arrow function.","ArrowFunctionExpression","unexpected",["417"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["418","419"],"Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword",[1117,1120],"const",[1154,1157],[0,2],"",{"messageId":"420","fix":"421","desc":"422"},{"messageId":"420","fix":"423","desc":"422"},{"messageId":"424","fix":"425","desc":"426"},{"messageId":"427","fix":"428","desc":"429"},"suggestOptionalChain",{"range":"430","text":"431"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"432","text":"431"},"suggestUnknown",{"range":"433","text":"434"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"433","text":"435"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2258,2259],"?.",[2830,2831],[2944,2947],"unknown","never"]